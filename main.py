# calculator
import art


# add
def add(n1, n2):  # создаем функцию сложения с 2мя параметрами - будущими числами
    return n1 + n2  # в качестве действия прописываем математическое действие


# Substract
def substract(n1, n2):  # создаем функцию вычитания с 2мя параметрами - будущими числами
    return n1 - n2  # в качестве действия прописываем математическое действие


# Multiply
def multiply(n1, n2):  # создаем функцию умножения с 2мя параметрами - будущими числами
    return n1 * n2  # в качестве действия прописываем математическое действие


# Divide
def divide(n1, n2):  # создаем функцию деления с 2мя параметрами - будущими числами
    return n1 / n2  # в качестве действия прописываем математическое действие


operations = {
    # создаем словарь, где key - это знак математического действия (его вдальнейшем будет определять юзер), а value - название прописанной ранее функции
    "+": add,
    "-": substract,
    "*": multiply,
    "/": divide
}


def calculator():
    print(art.logo)

    num1 = float(input(
        "What's the first number?:"))  # запрашиваем у юзера 1е число. Выводим как Float, чтобы можно было использовать нецелые числа
    for symbol in operations:  # выводим все key из словаря, чтобы юзер выбрал следующее действие
        print(symbol)
    should_continue = True  # создаем переменную для дальнейшего создания while loop

    while should_continue:
        operation_symbol = input("Pick an operation: ")  # запрашиваем математическое действие у юзера
        num2 = float(input("What's the next number?:"))  # запрашиваем у юзера 2е число
        calculation_function = operations[
            operation_symbol]  # создаем переменную, в которой из словаря определяется имя функции, согласно выбранному мат.действию
        answer = calculation_function(num1,
                                      num2)  # создаем переменную, которая подставляет название выбранной функции и в скобках пишем аргументы, которые будут внесены в параметры ранее созданных функций. Необходимая функция с новыми аргументами выполняется через return

        print(f"{num1} {operation_symbol} {num2} = {answer}")  # выводим результат на экран

        if input(
                f"Type 'y' to continue calculating with {answer}, or type 'n' to start new calculation: \n") == "y":  # спрашиваем, нужно ли следующее вычисление
            num1 = answer  # обновляем аргумент для дальнейших выполнений функции. Берется последний результат вычислений.
        else:
            should_continue = False  # если юзер не выбирает продолжить, while loop начинает считать новые числа, без использования предыдущих ответов
            calculator()  # !!!отправит нас в начало функции для работы с новыми вводными


calculator()








